

#include "maniFEM.h"

namespace maniFEM  {  void test_sq_dist();  }

using namespace maniFEM;


	

int main ( )

{	// begin with the usual two-dimensional space
	Manifold RR2 ( tag::Euclid, tag::of_dim, 2 );
	Function xy = RR2.build_coordinate_system ( tag::Lagrange, tag::of_degree, 1 );
	Function x = xy[0], y = xy[1];

	// define two actions on RR2 (translations)
	Function::Action g_horiz ( tag::transforms, xy, tag::into, (x+0.8) && y ),
	                 g_vert ( tag::transforms, xy, tag::into, x && (y+0.8) );

	// and divide RR2 by the group of translations generated by { g_horiz, g_vert }
	Manifold torus_manif = RR2.quotient ( g_horiz, g_vert );

	test_sq_dist();
}

